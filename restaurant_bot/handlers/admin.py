from restaurant_bot.database.rest_db_for_admin import (
    add_item_to_menu,
    update_item_price,
    delete_item,
    get_orders_for_today,
    format_orders,
)
from restaurant_bot.states.user_information import AdminStates
from restaurant_bot.keyboards.reply.reply import get_back_button
from telebot.types import Message
from telebot import TeleBot


def register_admin_handlers(bot: TeleBot):
    @bot.message_handler(commands=["add"])
    def start_add_item_process(message: Message):
        """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª—é–¥–∞."""
        bot.set_state(message.from_user.id, AdminStates.add_item_name, message.chat.id)
        bot.send_message(
            message.chat.id,
            "–í—ã –Ω–∞—á–∞–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –±–ª—é–¥–∞. "
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ù–∞–∑–∞–¥' –¥–ª—è –æ—Ç–º–µ–Ω—ã.",
            reply_markup=get_back_button()
        )


    @bot.message_handler(state=AdminStates.add_item_name)
    def get_item_name(message: Message):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –±–ª—é–¥–∞."""
        if not message.text.strip():
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
            return

        if message.text.strip().lower() == "/exit":
            exit_process(message)
            return

        item_name = message.text.strip()
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['item_name'] = item_name

        bot.set_state(message.from_user.id, AdminStates.add_item_price, message.chat.id)
        bot.send_message(
            message.chat.id,
            "–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –±–ª—é–¥–∞ (—Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ).",
            reply_markup=get_back_button()
        )


    @bot.message_handler(state=AdminStates.add_item_price)
    def get_item_price(message: Message):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –±–ª—é–¥–∞."""
        if not message.text.strip():
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: —Ü–µ–Ω–∞ –±–ª—é–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π.")
            return

        if message.text.strip().lower() == "/exit":
            exit_process(message)
            return

        try:
            item_price = float(message.text.strip())
            if item_price <= 0:
                raise ValueError("–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")

            with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
                item_name = data['item_name']
                add_item_to_menu(item_name, item_price)

            bot.send_message(
                message.chat.id,
                f"–ë–ª—é–¥–æ '{item_name}' —Å —Ü–µ–Ω–æ–π {item_price} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –º–µ–Ω—é! üçΩ"
            )
            bot.delete_state(message.from_user.id, message.chat.id)
        except ValueError:
            bot.send_message(
                message.chat.id,
                "–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—É—é —Ü–µ–Ω—É.",
                reply_markup=get_back_button()
            )


    @bot.message_handler(commands=["change_price"])
    def start_change_price_process(message: Message):
        """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã –±–ª—é–¥–∞."""
        bot.set_state(message.from_user.id, AdminStates.change_price_item, message.chat.id)
        bot.send_message(
            message.chat.id,
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É:",
            reply_markup=get_back_button()
        )


    @bot.message_handler(state=AdminStates.change_price_item)
    def change_price_handler(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã –±–ª—é–¥–∞."""
        if not message.text.strip():
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
            return

        if message.text.strip().lower() == "/exit":
            exit_process(message)
            return

        item_name = message.text.strip()
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['item_name'] = item_name

        bot.set_state(message.from_user.id, AdminStates.change_price_value, message.chat.id)
        bot.send_message(
            message.chat.id,
            f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Ü–µ–Ω—É –¥–ª—è –±–ª—é–¥–∞ '{item_name}':",
            reply_markup=get_back_button()
        )


    @bot.message_handler(state=AdminStates.change_price_value)
    def set_new_price_handler(message: Message):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–π —Ü–µ–Ω—ã –±–ª—é–¥–∞."""
        if not message.text.strip():
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: —Ü–µ–Ω–∞ –±–ª—é–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π.")
            return

        if message.text.strip().lower() == "/exit":
            exit_process(message)
            return

        try:
            new_price = float(message.text.strip())
            if new_price <= 0:
                raise ValueError("–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")

            with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
                item_name = data['item_name']
                update_item_price(item_name, new_price)

            bot.send_message(
                message.chat.id,
                f"–¶–µ–Ω–∞ –±–ª—é–¥–∞ '{item_name}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ {new_price}! üí∞"
            )
            bot.delete_state(message.from_user.id, message.chat.id)
        except ValueError:
            bot.send_message(
                message.chat.id,
                "–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—É—é —Ü–µ–Ω—É.",
                reply_markup=get_back_button()
            )


    @bot.message_handler(commands=["delete_item"])
    def start_delete_item_process(message: Message):
        """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —É–¥–∞–ª–µ–Ω–∏—è –±–ª—é–¥–∞."""
        bot.set_state(message.from_user.id, AdminStates.delete_item_name, message.chat.id)
        bot.send_message(
            message.chat.id,
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å:",
            reply_markup=get_back_button()
        )


    @bot.message_handler(state=AdminStates.delete_item_name)
    def delete_item_handler(message: Message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –±–ª—é–¥–∞."""
        if not message.text.strip():
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.")
            return

        if message.text.strip().lower() == "/exit":
            exit_process(message)
            return

        item_name = message.text.strip()
        if delete_item(item_name):
            bot.send_message(
                message.chat.id,
                f"–ë–ª—é–¥–æ '{item_name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –º–µ–Ω—é! üóë"
            )
        else:
            bot.send_message(
                message.chat.id,
                f"–û—à–∏–±–∫–∞: –±–ª—é–¥–æ '{item_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –º–µ–Ω—é.",
                reply_markup=get_back_button()
            )
        bot.delete_state(message.from_user.id, message.chat.id)


    @bot.message_handler(commands=["view_orders"])
    def start_view_orders_process(message: Message):
        """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è."""
        try:
            orders = get_orders_for_today()
            if orders:
                formatted_orders = format_orders(orders)
                bot.send_message(
                    message.chat.id,
                    f"–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n{formatted_orders}"
                )
            else:
                bot.send_message(message.chat.id, "–ù–∞ —Å–µ–≥–æ–¥–Ω—è –∑–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç. üòä")
        except Exception as e:
            bot.send_message(
                message.chat.id,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤: {e}")


    @bot.message_handler(commands=["exit"], state="*")
    def exit_process(message: Message):
        """–í—ã—Ö–æ–¥ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ —Å–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö."""
        bot.delete_state(message.from_user.id, message.chat.id)
        bot.send_message(
            message.chat.id,
            "–í—ã –≤—ã—à–ª–∏ –∏–∑ –ø—Ä–æ—Ü–µ—Å—Å–∞. –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω—É–∂–Ω—É—é –∫–æ–º–∞–Ω–¥—É."
        )
